package i18nTemplates 

import (
	i18nStructs "github.com/JosunHK/josun-go.git/cmd/structs/i18n"
	i18nUtil "github.com/JosunHK/josun-go.git/cmd/util/i18n"
	button "github.com/JosunHK/josun-go.git/web/templates/components/ui/button"
	card "github.com/JosunHK/josun-go.git/web/templates/components/ui/card"
	"github.com/JosunHK/josun-go.git/web/templates/components/ui/icon"
	input "github.com/JosunHK/josun-go.git/web/templates/components/ui/input"
	label "github.com/JosunHK/josun-go.git/web/templates/components/ui/label"
	selectBox "github.com/JosunHK/josun-go.git/web/templates/components/ui/selectBox"
	table "github.com/JosunHK/josun-go.git/web/templates/components/ui/table"
	gocva "github.com/gungun974/gocva"
)

templ I18n(locale string) {
	<div class="flex flex-col justify-center items-center w-full h-full">
		@card.Card(card.Props{
			Class: "w-[1000px]",
		}) {
			@LocaleSelect(locale)
			@I18nTable(locale)
		}
	</div>
}

templ LocaleSelect(locale string) {
	<div class="w-full flex justify-end">
		@selectBox.Select(i18nUtil.LOCALE_MENU,
			selectBox.BodyProps{
				Selected: i18nUtil.GetMenuItem(locale),
					Class: "mt-2 mr-2",
					Attrs: templ.Attributes{
						"@item-clicked": "window.location.replace(selectedValue)",
					},
			},
		)
	</div>
}

templ I18nTableHeader() {
	@table.Header(table.Props{
		Class: "sticky top-0 bg-background z-10",
	}) {
		@table.Row(table.Props{
			Class: "rounded-t-lg sticky border-none [&>th]:font-bold",
		}) {
			@table.Head(table.Props{}) {
				Key
			}
			@table.Head(table.Props{}) {
				Default
			}
			@table.Head(table.Props{}) {
				One	
			}
			@table.Head(table.Props{}) {
				Many
			}
			@table.Head(table.Props{}) {
			}
		}
		{ children... }
	}
}

templ I18nTable(locale string) {
	<div
		Class="max-h-[500px] h-[500px] overflow-y-scroll scrollbar-hide "
	>
		@table.Table(table.Props{}) {
			@I18nTableHeader() {
				@NewRow(locale)
			}
			@table.Body(table.Props{
				Attrs: templ.Attributes{
					"hx-get":     "/i18n/items/" + locale,
					"hx-trigger": "load",
					"id":         "i18n-table",
				},
			})
		}
	</div>
}

templ NewRow(locale string) {
	<form
		hx-post={ "/i18n/items/" + locale }
		hx-on::after-request="this.reset()"
		hx-swap="outerHTML transition:true"
		hx-target="#i18n-table"
	>
		@table.Row(table.Props{
			Class: "border-top-none",
		}) {
			@table.Cell(table.Props{}) {
				@input.Input(
					input.InputProps{
						Type: "text",
							Name:  "key",
							Class: "my-2",
					},
				)
			}
			@table.Cell(table.Props{}) {
				@input.Input(
					input.InputProps{
						Type: "text",
                        Name:  "default",
                        Class: "my-2",
					},
				)
			}
			@table.Cell(table.Props{}) {
				@input.Input(
					input.InputProps{
						Type: "text",
                        Name:  "one",
                        Class: "my-2",
					},
				)
			}
			@table.Cell(table.Props{}) {
				@input.Input(
					input.InputProps{
						Type: "text",
                        Name:  "many",
                        Class: "my-2",
					},
				)
			}
			@table.Cell(table.Props{}) {
				@button.Button(button.Props{
					Class: "mt-2 mb-2.5",
					Variant: gocva.Variant{"variant": "secondary"},
				}) {
					@label.Label(
						label.LabelProps{
							Variant: gocva.Variant{"variant": "title"},
						},
					) {
						@icon.Wrapper(icon.Props{}) {
							@icon.Plus()
						}
					}
				}
			}
		}
	</form>
}

templ I18nTableItems(tableItems []i18nStructs.Item) {
	for _, item := range tableItems {
		@table.Row(table.Props{}) {
			@table.Cell(table.Props{}) {
				{ item.Key }
			}
			@table.Cell(table.Props{}) {
				{ item.Default }
			}
			@table.Cell(table.Props{}) {
				{ item.One }
			}
			@table.Cell(table.Props{}) {
				{ item.Many }
			}
			@table.Cell(table.Props{})
		}
	}
}
