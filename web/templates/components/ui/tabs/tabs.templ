package tabs

import (
	"fmt"
	twmerge "github.com/Oudwins/tailwind-merge-go/pkg/twmerge"
)

var M = twmerge.Merge

type Props struct {
	Class string
	Attrs templ.Attributes
	Title string
}

templ TabsContext(props Props, init string) {
	<div
		class={ props.Class }
		x-data="{
            activeTab: '',
            setActiveTab(index) {
                this.activeTab = index
            },
        }"
		x-init={ fmt.Sprintf("setActiveTab('%s')", init) }
		{ props.Attrs... }
	>
		{ children... }
	</div>
}

templ TabsList(props Props) {
	<div
		class={ M(
            "inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-background",
            props.Class,
        ) }
		{ props.Attrs... }
	>
		{ children... }
	</div>
}

templ TabsTrigger(props Props, tabId string) {
	<div
		class={ M(
          `inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm text-muted-background
          font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 
          focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 cursor-default`,
          props.Class,
        ) }
		{ props.Attrs... }
		:class={ fmt.Sprintf("activeTab === '%s' ? 'bg-background text-muted-foreground shadow-sm' : ''", tabId) }
		@click={ fmt.Sprintf("setActiveTab('%s')", tabId) }
	>
		{ children... }
	</div>
}

templ TabsContent(props Props, tabId string) {
	<div
		id={ props.Title }
		class={ M(
          "mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2",
          props.Class,
        ) }
        x-transition:enter="transition ease-out duration-300"
        x-transition:enter-start="opacity-0 scale-90"
        x-transition:enter-end="opacity-100 scale-100"
		x-show={ fmt.Sprintf("activeTab === '%s'", tabId) }
	>
		{ children... }
	</div>
}
