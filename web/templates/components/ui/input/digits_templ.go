// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.747
package input

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"fmt"
	base "github.com/JosunHK/josun-go.git/web/templates/props"
)

var scriptHandle = templ.NewOnceHandle()

func Digits(props base.Props, digits int) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		var templ_7745c5c3_Var2 = []any{props.Class}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var2...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div x-data=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("{length :  %v}", digits))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/templates/components/ui/input/digits.templ`, Line: 12, Col: 54}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var4 string
		templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var2).String())
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/templates/components/ui/input/digits.templ`, Line: 1, Col: 0}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, props.Attrs)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("><div x-data=\"{\n                    value: &#39;&#39;,\n                    get inputs() {\n                        return this.$refs.otpInputContainer.querySelectorAll(&#39;.otpInput&#39;);\n                    },\n                    handleInput(e, index) {\n                        if (isNaN(e.target.value)) {\n                            e.target.value = &#39;&#39;\n                            return\n                        }\n                        const inputValues = [...this.inputs].map(input =&gt; input.value);\n                        this.value = inputValues.join(&#39;&#39;);\n                        if (e.target.value) {\n                            const nextInput = this.inputs[index + 1];\n                            if (nextInput) {\n                                nextInput.focus();\n                                nextInput.select();\n                            }\n                        }\n                    },\n\n                    handlePaste(e) {\n                        const paste = e.clipboardData.getData(&#39;text&#39;).slice(0, this.length);\n                        paste.split(&#39;&#39;).forEach((char, i) =&gt; {\n                            if (this.inputs[i]) {\n                                this.inputs[i].value = char;\n                            }\n                        });\n                        this.value = [...this.inputs].map(input =&gt; input.value).join(&#39;&#39;);\n                    },\n\n                    handleBackspace(e, index) {\n                        if (index &gt; 0) {\n                            this.inputs[index - 1].focus();\n                            this.inputs[index - 1].select();\n                        }\n                    },\n                    resetCaret(el) {\n                        var val = el.value; \n                        el.value = &#39;&#39;; \n                        el.value = val; \n                    }\n                }\" class=\"flex justify-center\"><div class=\"flex justify-center w-min\" x-ref=\"otpInputContainer\"><template x-for=\"(input, index) in length\" :key=\"index\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Input(InputProps{
			Props: base.Props{
				Class: "otpInput w-[2.5rem] h-[2.5rem] text-center text-md border focus:border-2 focus:border-primary focus:outline-none focus-visible:ring-0 focus-visible:ring-offset-0 font-bold rounded-none first-of-type:rounded-l-md first-of-type:border-l last:rounded-r-md transition-all caret-transparent ease-in-out duration-[30ms]",
				Attrs: templ.Attributes{
					"type":                   "tel",
					"maxlength":              "1",
					"x-on:input":             "handleInput($event, index)",
					"x-on:click":             "resetCaret($el)",
					"x-on:paste":             "handlePaste($event)",
					"x-on:keydown.backspace": "$event.target.value || handleBackspace($event, index)",
				},
			},
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</template></div><input type=\"hidden\" name=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var5 string
		templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(props.Name)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/templates/components/ui/input/digits.templ`, Line: 79, Col: 41}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" x-model=\"value\"></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}
