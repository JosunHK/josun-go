package card 

import (
	twmerge "github.com/JosunHK/josun-go.git/pkg/twmerge"
	button "github.com/JosunHK/josun-go.git/web/templates/components/ui/button"
	input "github.com/JosunHK/josun-go.git/web/templates/components/ui/input"
	label "github.com/JosunHK/josun-go.git/web/templates/components/ui/label"
	base "github.com/JosunHK/josun-go.git/web/templates/props"
	"github.com/gungun974/gocva"
)

var M = twmerge.Merge

type CardProps struct {
	Title       string
	Description string
	Footer      string
}

templ LoginCard(cardProps CardProps) {
	@Card(base.Props{}) {
		@Header(base.Props{}) {
			@Title(base.Props{}) {
				{ cardProps.Title }
			}
		}
		@Content(base.Props{}) {
			@label.Label(
                label.LabelProps{
                    Variant: gocva.Variant{"variant": "default"},
                },
            ) { 
                Username 
            }
			@input.Input(
				input.InputProps{
                    Type: "text", 
                    Props: base.Props{
                        Class:"my-2",
                    },
                },
			)
			@label.Label(
                label.LabelProps{Variant: gocva.Variant{"variant": "default"}},
            ) { 
               Password 
            }
			@input.Input(
				input.InputProps{
                    Type: "password",
                    Props: base.Props{
                        Class:"my-2",
                    },
                },
			)
		}
		@Footer(base.Props{}) {
			@button.Button(button.ButtonProps{}) {
				Login
			}
		}
	}
}

templ InfoCard(cardProps CardProps) {
	@Card(base.Props{}) {
		@Header(base.Props{}) {
			@Title(base.Props{}) {
				{ cardProps.Title }
			}
			@Description(base.Props{}) {
				{ cardProps.Description }
			}
		}
		@Content(base.Props{}) {
            @input.Input(
                input.InputProps{
                    Type: "text",
                    Props: base.Props{
                        Class:"my-2",
                    },
                },
            )
			{ children... }
		}
		@Footer(base.Props{}) {
			{ cardProps.Footer }
		}
	}
}

templ Card(props base.Props) {
	<div
		class={ M("w-[350px] rounded-lg border bg-card text-card-foreground shadow-sm", props.Class) }
		{ props.Attrs... }
	>
		{ children... }
	</div>
}

templ Header(props base.Props) {
	<div
		class={ M("flex flex-col space-y-1.5 p-6", props.Class) }
		{ props.Attrs... }
	>
		{ children... }
	</div>
}

templ Title(props base.Props) {
	<h3
		class={ M("text-2xl font-semibold leading-none tracking-tight", props.Class) }
		{ props.Attrs... }
	>
		{ children... }
	</h3>
}

templ Description(props base.Props) {
	<p
		class={ M("text-sm text-muted-foreground", props.Class) }
		{ props.Attrs... }
	>
		{ children... }
	</p>
}

templ Content(props base.Props) {
	<div
		class={ M("p-6 pt-0", props.Class) }
		{ props.Attrs... }
	>
		{ children... }
	</div>
}

templ Footer(props base.Props) {
	<div
		class={ M("flex items-center p-6 pt-0", props.Class) }
		{ props.Attrs... }
	>
		{ children... }
	</div>
}
