package settings 

import (
	"github.com/JosunHK/josun-go.git/web/templates/components/ui/button"
	"github.com/JosunHK/josun-go.git/web/templates/components/ui/dropDownMenu"
	"github.com/JosunHK/josun-go.git/web/templates/components/ui/icon"
	base "github.com/JosunHK/josun-go.git/web/templates/props"
	"github.com/gungun974/gocva"
)

templ DarkModeToggle(T func(string) string) {
	@dropDownMenu.DropDownMenu(base.Props{}) {
		@dropDownMenu.DropDownMenuTrigger(base.Props{}) {
			@button.Button(button.ButtonProps{
				Variant: gocva.Variant{
					"variant": "outline",
					"size":    "icon",
				},
			}) {
				//Make buttons hidden before alpine is loaded becasue I have OCD
				@dropDownMenu.DropDownMenuTriggerIcon(base.Props{
					Class: "hidden",
					Attrs: templ.Attributes{
						":class": "{ 'hidden' : !Alpine.store('darkMode').on }",
					},
				}) {
					@icon.Moon()
				}
				@dropDownMenu.DropDownMenuTriggerIcon(base.Props{
					Class: "hidden",
					Attrs: templ.Attributes{
						":class": "{ 'hidden' : Alpine.store('darkMode').on }",
					},
				}) {
					@icon.Sun()
				}
			}
		}
		@dropDownMenu.DropDownMenuContent(base.Props{}) {
			@dropDownMenu.DropDownMenuItem(base.Props{
				Attrs: templ.Attributes{
					"@item-clicked": "Alpine.store('darkMode').setMode(true)",
				},
			}) {
				{ T("dark_mode") }
			}
			@dropDownMenu.DropDownMenuItem(base.Props{
				Attrs: templ.Attributes{
					"@item-clicked": "Alpine.store('darkMode').setMode(false)",
				},
			}) {
				{ T("light_mode") }
			}
		}
	}
	@DarkModeToggleScript()
}

templ DarkModeToggleScript() {
	<script>
        document.addEventListener('alpine:init', () => {
                Alpine.store('darkMode', {
                    on: Alpine.$persist(true).as('darkModeOn'),
                    setMode(mode) {
                        this.on = mode
                    }
                })
        })
    </script>
}
